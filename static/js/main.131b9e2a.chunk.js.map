{"version":3,"sources":["components/Notification/Notifi.module.css","components/Button/Button.js","components/ListFeed/ListFeed.js","components/Notification/Notification.js","components/ButtonFeedback/ButtonFeedback.js","components/App.js","index.js","components/Button/Button.module.css","components/ListFeed/ListFeed.module.css"],"names":["module","exports","FeedbackOptions","onIncrement","className","styles","title","click","good","type","onClick","name","neutral","bad","prototype","PropTypes","string","isRequired","ListBack","total","positivePercentage","list","number","Notification","given","Feedback","state","heandleIncrement","event","target","setState","prevState","countTotalFeedback","i","Object","values","length","countPositiveFeedbackPercentage","positiv","Math","round","section","this","message","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,MAAQ,wB,+JCKpBC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACpB,qCACI,oBAAIC,UAAWC,IAAOC,MAAtB,oCACA,sBAAKF,UAAWC,IAAOE,MAAvB,UACA,wBAAQH,UAAWC,IAAOG,KAAMC,KAAK,SAASC,QAASP,EAAYQ,KAAK,OAAxE,kBAEA,wBAASP,UAAWC,IAAOO,QAASH,KAAK,SAASC,QAASP,EAAYQ,KAAK,UAA5E,qBAEA,wBAASP,UAAWC,IAAOQ,IAAIJ,KAAK,SAASC,QAASP,EAAYQ,KAAK,MAAvE,wBAKOT,IAGfA,EAAgBY,UAAY,CACxBX,YAAaY,IAAUC,OAAOC,Y,oBCnB5BC,EAAW,SAAC,GAAD,IAAEV,EAAF,EAAEA,KAAMI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAIM,EAArB,EAAqBA,MAAMC,EAA3B,EAA2BA,mBAA3B,OACf,gCACE,oBAAIhB,UAAaC,IAAOC,MAAxB,wBACA,qBAAIF,UAAaC,IAAOgB,KAAxB,UACA,uCAAUb,KACV,0CAAaI,KACb,sCAASC,KACT,yCAAYM,KACZ,qDAAwBC,EAAxB,cAIWF,IAEfA,EAASJ,UAAY,CACnBN,KAAMO,IAAUO,OAAOL,WACvBL,QAASG,IAAUO,OAAOL,WAC1BJ,IAAKE,IAAUO,OAAOL,WACtBE,MAAOJ,IAAUO,OAAOL,WACxBG,mBAAoBL,IAAUO,OAAOL,Y,qBCfxBM,EAJM,kBACjB,oBAAInB,UAAaC,IAAOmB,MAAxB,gCCkDWC,E,4MA/CbC,MAAQ,CACNlB,KAAM,EACNI,QAAS,EACTC,IAAK,G,EAEPc,iBAAmB,SAACC,GAClB,IAAMjB,EAAOiB,EAAMC,OAAOlB,KAC1B,EAAKmB,UAAS,SAACC,GAAD,sBACXpB,EAAOoB,EAAUpB,GAAQ,O,EAI9BqB,mBAAqB,WAEnB,IADA,IAAIb,EAAQ,EACHc,EAAI,EAAGA,EAAIC,OAAOC,OAAO,EAAKT,OAAOU,OAAQH,GAAK,EACzDd,GAASe,OAAOC,OAAO,EAAKT,OAAOO,GAErC,OAAOd,G,EAGTkB,gCAAkC,WAEhC,IADA,IAAIlB,EAAQ,EACHc,EAAI,EAAGA,EAAIC,OAAOC,OAAO,EAAKT,OAAOU,OAAQH,GAAK,EACzDd,GAASe,OAAOC,OAAO,EAAKT,OAAOO,GAErC,IAAMK,EAAW,EAAKZ,MAAMlB,KAAOW,EAAS,IAC5C,OAAOoB,KAAKC,MAAMF,I,4CAEpB,WACE,OACE,qCACE,yBAAShC,MAAM,wBAAwBF,UAAaC,IAAOoC,QAA3D,SACE,cAAC,EAAD,CAAiBtC,YAAauC,KAAKf,qBAEpCe,KAAKV,qBACJ,cAAC,EAAD,2BACMU,KAAKhB,OADX,IAEEP,MAAOuB,KAAKV,qBACZZ,mBAAoBsB,KAAKL,qCAG3B,cAAC,EAAD,CAAcM,QAAQ,6B,GA1CTC,IAAMC,WCIdC,EALH,kBACV,mCACE,cAAC,EAAD,OCFJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BnD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,QAAU,wBAAwB,MAAQ,sBAAsB,KAAO,qBAAqB,QAAU,wBAAwB,IAAM,sB,kBCApLD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,2B","file":"static/js/main.131b9e2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"given\":\"Notifi_given__1rRtT\"};","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Button.module.css'\r\n\r\n\r\n\r\nconst FeedbackOptions = ({ onIncrement }) => (\r\n    <>\r\n        <h2 className={styles.title}>Please leave feedback </h2>\r\n        <div className={styles.click}>\r\n        <button className={styles.good} type=\"button\" onClick={onIncrement}name=\"good\">\r\n            Good</button>\r\n        <button  className={styles.neutral} type=\"button\" onClick={onIncrement}name=\"neutral\">\r\n            Neutral</button>\r\n        <button  className={styles.bad}type=\"button\" onClick={onIncrement}name=\"bad\">\r\n            Bad</button>\r\n        </div>\r\n    </>\r\n)\r\nexport default FeedbackOptions\r\n\r\n\r\nFeedbackOptions.prototype = {\r\n    onIncrement: PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ListFeed.module.css';\r\n\r\nconst ListBack = ({good, neutral, bad,total,positivePercentage}) => (\r\n  <div>\r\n    <h2 className = {styles.title}>Statistics</h2>\r\n    <ul className = {styles.list}>\r\n    <li>Good:{good}</li>\r\n    <li>Neutral:{neutral}</li>\r\n    <li>Bad:{bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n    </div>\r\n)\r\nexport default ListBack\r\n\r\nListBack.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  \r\n}","import React from 'react'\r\nimport styles from './Notifi.module.css';\r\n\r\n\r\nconst Notification = () => (\r\n    <h2 className = {styles.given}>No feedback given</h2>\r\n    \r\n)\r\nexport default Notification","import React from \"react\";\r\nimport FeedbackOptions from \"../Button/Button\";\r\nimport Statistics from \"../ListFeed/ListFeed\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport styles from '../Button/Button.module.css'\r\nimport Section from \"../Section/Section\";\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  heandleIncrement = (event) => {\r\n    const name = event.target.name;\r\n    this.setState((prevState) => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < Object.values(this.state).length; i += 1) {\r\n      total += Object.values(this.state)[i];\r\n    }\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < Object.values(this.state).length; i += 1) {\r\n      total += Object.values(this.state)[i];\r\n    }\r\n    const positiv = (this.state.good / total) * 100;\r\n    return Math.round(positiv);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section title='Please leave feedback' className = {styles.section}>\r\n          <FeedbackOptions onIncrement={this.heandleIncrement} />\r\n        </section>\r\n        {this.countTotalFeedback() ? (\r\n          <Statistics\r\n            {...this.state}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message='No feedback given'/>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import React from 'react'\nimport Feedback from './ButtonFeedback/ButtonFeedback'\n\n\n\n\nconst App = () => (\n  <>\n    <Feedback/>\n  </>\n)\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Button_title__20oCd\",\"section\":\"Button_section__1YraF\",\"click\":\"Button_click__3X9ch\",\"good\":\"Button_good__1Val7\",\"neutral\":\"Button_neutral__1rjea\",\"bad\":\"Button_bad__1xim-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListFeed_list__2vy8a\",\"title\":\"ListFeed_title__1H7ul\"};"],"sourceRoot":""}